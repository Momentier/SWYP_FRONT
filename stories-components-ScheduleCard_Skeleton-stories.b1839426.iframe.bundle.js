"use strict";(self.webpackChunkmy_app=self.webpackChunkmy_app||[]).push([[7749],{"./src/lib/api/axiosInstance.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>api_axiosInstance});var react=__webpack_require__("./node_modules/zustand/esm/react.mjs"),middleware=__webpack_require__("./node_modules/zustand/esm/middleware.mjs"),console=__webpack_require__("./node_modules/console-browserify/index.js");const useAuthStore=(0,react.v)()((0,middleware.Zr)(((set,get)=>({isLoggedIn:!1,user:null,hasHydrated:!1,setHasHydrated:value=>set({hasHydrated:value}),login:user=>{set({isLoggedIn:!0,user})},refresh:token=>{const currentUser=get().user;if(currentUser){const updatedUser={...currentUser,accessToken:token.accessToken,expiresIn:token.expiresIn};set({isLoggedIn:!0,user:updatedUser})}else console.warn("User not found. Cannot refresh token.")},logout:()=>{set({isLoggedIn:!1,user:null})}})),{name:"auth-storage",onRehydrateStorage:()=>state=>{state&&state.setHasHydrated(!0)},skipHydration:!1}));var auth_console=__webpack_require__("./node_modules/console-browserify/index.js");const useLoadingStore=(0,react.v)((set=>({isLoading:!1,loadingType:"none",setLoading:(isLoading,type="fullscreen")=>set({isLoading,loadingType:isLoading?type:"none"})})));var axios=__webpack_require__("./node_modules/axios/lib/axios.js"),process=__webpack_require__("./node_modules/process/browser.js"),axiosInstance_console=__webpack_require__("./node_modules/console-browserify/index.js");const backendUrl=process.env.NEXT_PUBLIC_API_BASE_URL,axiosInstance_axiosInstance=axios.A.create({baseURL:backendUrl,headers:{"Content-Type":"application/json"},withCredentials:!0});axiosInstance_axiosInstance.interceptors.request.use((config=>{const{user}=useAuthStore.getState();var _config_loadingType;(null==user?void 0:user.accessToken)&&(config.headers.Authorization=`Bearer ${user.accessToken}`);const type=null!==(_config_loadingType=config.loadingType)&&void 0!==_config_loadingType?_config_loadingType:"fullscreen";return useLoadingStore.getState().setLoading(!0,type),config}),(error=>(useLoadingStore.getState().setLoading(!1),Promise.reject(error)))),axiosInstance_axiosInstance.interceptors.response.use((response=>(useLoadingStore.getState().setLoading(!1),response)),(async error=>{useLoadingStore.getState().setLoading(!1);const originalRequest=error.config;if(originalRequest.url.includes("/auth/token/reissue"))return axiosInstance_console.warn("🛑 토큰 재발급 요청은 인터셉터에서 무시합니다."),Promise.reject(error);if(!useAuthStore.getState().isLoggedIn)return axiosInstance_console.warn("🔒 로그아웃 상태입니다. 요청 중단"),Promise.reject(error);if(401===error.response.status&&!originalRequest._retry){originalRequest._retry=!0,axiosInstance_console.warn("🔄 401 발생, 토큰 재발급 시도 중...");const newAccessToken=await(async()=>{try{const response=await api_axiosInstance.post("/auth/token/reissue");if(200===response.status){const{accessToken,userName,expiresIn,hasSubmittedExperience}=response.data;return useAuthStore.getState().refresh({accessToken,expiresIn}),auth_console.log("🔄 토큰 재발급 성공"),response.data}return auth_console.error("❌ 토큰 재발급 실패"),useAuthStore.getState().logout(),null}catch(error){return auth_console.error("토큰 재발급 중 오류 발생:",error),useAuthStore.getState().logout(),null}})();if(newAccessToken)return axiosInstance_console.log("✅ 토큰 재발급 성공, 요청 재시도"),originalRequest.headers.Authorization=`Bearer ${newAccessToken}`,axiosInstance_axiosInstance(originalRequest);axiosInstance_console.error("❌ 토큰 재발급 실패, 로그아웃 처리"),useAuthStore.getState().logout(),window.location.href="/main"}return Promise.reject(error)}));const api_axiosInstance=axiosInstance_axiosInstance},"./src/store/useRecommendTravelStore.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{PZ:()=>usePublicTravelDetailStore,w1:()=>useRecommendTravelDetailStore});var axiosInstance=__webpack_require__("./src/lib/api/axiosInstance.ts");var react=__webpack_require__("./node_modules/zustand/esm/react.mjs"),middleware=__webpack_require__("./node_modules/zustand/esm/middleware.mjs"),console=__webpack_require__("./node_modules/console-browserify/index.js");(0,react.v)()((0,middleware.Zr)((set=>({inputs:null,setInputs:inputs=>set({inputs}),clearInputs:()=>set({inputs:null})})),{name:"user-input"})),(0,react.v)()((0,middleware.Zr)((set=>({items:[],setItems:items=>set({items}),clearItems:()=>set({items:[]})})),{name:"recommend-list"}));const calculateScheduleTimes=async places=>places?await Promise.all(places.map((async(currentPlace,index)=>{const nextPlace=places[index+1];if(!nextPlace)return currentPlace;const updatedPlace={...currentPlace,travelWalkTime:"정보 없음",travelCarTime:"정보 없음",travelDistance:"정보 없음"};if(currentPlace.latitude&&currentPlace.longitude&&nextPlace.latitude&&nextPlace.longitude)try{const{walkingDuration,drivingDuration,distance}=await(async data=>{try{return(await axiosInstance.A.get("/route/time",{params:{startLatitude:data.startLatitude,startLongitude:data.startLongitude,endLatitude:data.endLatitude,endLongitude:data.endLongitude},loadingType:"none"})).data}catch(error){var _error_response;throw new Error((null===(_error_response=error.response)||void 0===_error_response?void 0:_error_response.data.message)||"소요 시간 정보를 불러오지 못했습니다.")}})({startLatitude:currentPlace.latitude,startLongitude:currentPlace.longitude,endLatitude:nextPlace.latitude,endLongitude:nextPlace.longitude});walkingDuration&&(updatedPlace.travelWalkTime=`${walkingDuration}분`),drivingDuration&&(updatedPlace.travelCarTime=`${drivingDuration}분`),updatedPlace.travelDistance=""+(distance?distance+"m":"거리 정보 추후 업데이트")}catch(error){console.error("경로 계산 실패:",error)}return updatedPlace}))):[],updateDailySchedules=async schedules=>await Promise.all(schedules.map((async schedule=>{const updatedAttractions=await calculateScheduleTimes(schedule.attractions);return{...schedule,attractions:updatedAttractions}}))),useRecommendTravelDetailStore=(0,react.v)()((0,middleware.Zr)(((set,get)=>({itinerary:null,setItinerary:async itinerary=>{if(null==itinerary?void 0:itinerary.dailyScheduleDtos){const schedulesWithUUID=assignUUIDToSchedules(itinerary.dailyScheduleDtos),updatedSchedules=await updateDailySchedules(schedulesWithUUID);set({itinerary:{...itinerary,dailyScheduleDtos:updatedSchedules}})}else set({itinerary})},updateItinerary:async updatedItinerary=>{const itinerary=get().itinerary;if(itinerary){const updatedSchedules=await updateDailySchedules(updatedItinerary);set({itinerary:{...itinerary,dailyScheduleDtos:updatedSchedules}})}},updateAttraction:async(oldAttraction,newAttraction)=>{const itinerary=get().itinerary;if(itinerary){const updatedSchedules=await Promise.all(itinerary.dailyScheduleDtos.map((async schedule=>{if(!schedule.attractions.some((attraction=>attraction.id===oldAttraction.id)))return schedule;const updatedAttractions=await calculateScheduleTimes(schedule.attractions.map((attraction=>attraction.id===oldAttraction.id?{...newAttraction,id:oldAttraction.id,previousData:JSON.parse(JSON.stringify(attraction))}:attraction)));return{...schedule,attractions:updatedAttractions}})));set({itinerary:{...itinerary,dailyScheduleDtos:updatedSchedules}})}},clearItinerary:()=>set({itinerary:null})})),{name:"recommend-detail"})),usePublicTravelDetailStore=(0,react.v)()((0,middleware.Zr)((set=>({itinerary:null,setItinerary:async value=>{if(null==value?void 0:value.dailyScheduleDtos){const schedulesWithUUID=assignUUIDToSchedules(value.dailyScheduleDtos),updatedSchedules=await updateDailySchedules(schedulesWithUUID);set({itinerary:{...value,dailyScheduleDtos:updatedSchedules}})}else set({itinerary:value})},clearItinerary:()=>set({itinerary:null})})),{name:"public-travel-detail"})),assignUUIDToAttraction=attraction=>({...attraction,id:attraction.id&&"number"==typeof attraction.id?attraction.id:Date.now()+Math.floor(1e4*Math.random()),previousData:attraction.previousData?assignUUIDToAttraction(attraction.previousData):void 0}),assignUUIDToSchedules=schedules=>schedules.map((schedule=>{return{...schedule,attractions:(attractions=schedule.attractions,attractions.map(assignUUIDToAttraction))};var attractions}))},"./src/stories/components/ScheduleCard_Skeleton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FiveCards:()=>FiveCards,LoadingState:()=>LoadingState,ManyCards:()=>ManyCards,SingleCard:()=>SingleCard,ThreeCards:()=>ThreeCards,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ScheduleCard_Skeleton_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),useRecommendTravelStore=__webpack_require__("./src/store/useRecommendTravelStore.ts"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),imagePath=__webpack_require__("./src/utils/imagePath.ts");const DayScheduleCardSkeleton=({count})=>{const clearItinerary=(0,useRecommendTravelStore.w1)((state=>state.clearItinerary));return(0,react.useEffect)((()=>{clearItinerary()}),[clearItinerary]),(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("div",{className:"h-[54px] rounded-[11px] animate-pulse bg-[#E8E8EA] flex items-center justify-end px-[24px] mb-2",children:(0,jsx_runtime.jsx)("img",{src:imagePath.vK.CHEVRON_DOWN,alt:"expand",className:"w-[28px] h-[28px]"})}),Array.from({length:count}).map(((_,i)=>(0,jsx_runtime.jsx)("div",{className:"rounded-[16px] animate-pulse bg-[#F9F9F9] mb-2 flex",children:(0,jsx_runtime.jsxs)("div",{className:"flex p-6 gap-4",children:[(0,jsx_runtime.jsx)("div",{className:"w-6 h-full flex flex-col items-center gap-2",children:(0,jsx_runtime.jsx)("img",{src:imagePath.vK.HANDLE_DESKTOP,alt:"icon",className:"w-6 h-6 object-contain"})}),(0,jsx_runtime.jsxs)("div",{className:"flex flex-col justify-between gap-2 w-[456px] h-[160px]",children:[(0,jsx_runtime.jsx)("div",{className:"bg-[#EEEEEE] rounded-[4px] w-[45%] h-[30px]"}),(0,jsx_runtime.jsx)("div",{className:"w-[55%] bg-[#EEEEEE] h-[26px] rounded-[4px]"}),(0,jsx_runtime.jsxs)("div",{className:"flex items-center",children:[(0,jsx_runtime.jsx)("div",{className:"bg-[#EEEEEE] h-[20px] w-[20px] rounded-[4px] mr-1.5"}),(0,jsx_runtime.jsx)("div",{className:"bg-[#EEEEEE] h-[20px] w-[70%] rounded-[4px]"})]}),(0,jsx_runtime.jsxs)("div",{className:"flex items-center",children:[(0,jsx_runtime.jsx)("div",{className:"bg-[#EEEEEE] h-[20px] w-[20px] rounded-[4px] mr-1.5"}),(0,jsx_runtime.jsx)("div",{className:"bg-[#EEEEEE] h-[20px] w-[70%] rounded-[4px]"})]}),(0,jsx_runtime.jsxs)("div",{className:"flex items-center",children:[(0,jsx_runtime.jsx)("div",{className:"bg-[#EEEEEE] h-[20px] w-[20px] rounded-[4px] mr-1.5"}),(0,jsx_runtime.jsx)("div",{className:"bg-[#EEEEEE] h-[20px] w-[70%] rounded-[4px]"})]})]}),(0,jsx_runtime.jsx)("div",{className:"w-[280px] h-[160px] overflow-hidden rounded-2xl",children:(0,jsx_runtime.jsx)("div",{className:"w-full h-full bg-[#EEEEEE]"})}),(0,jsx_runtime.jsx)("div",{className:"w-6 h-full flex flex-col items-center gap-2",children:(0,jsx_runtime.jsx)("img",{src:imagePath.vK.RE_REQUEST,alt:"icon",className:"w-6 h-6 object-contain cursor-pointer"})})]})},i)))]})},ScheduleCard_Skeleton=DayScheduleCardSkeleton;DayScheduleCardSkeleton.__docgenInfo={description:"",methods:[],displayName:"DayScheduleCardSkeleton",props:{count:{required:!0,tsType:{name:"number"},description:""}}};const ScheduleCard_Skeleton_stories={title:"Components/ScheduleCard_Skeleton",component:ScheduleCard_Skeleton,tags:["autodocs"],argTypes:{count:{control:{type:"range",min:1,max:10,step:1},description:"스켈레톤 카드 개수"}}},SingleCard={args:{count:1}},ThreeCards={args:{count:3}},FiveCards={args:{count:5}},ManyCards={args:{count:8}},LoadingState={args:{count:4},parameters:{docs:{description:{story:"일정을 불러오는 동안 표시되는 로딩 상태입니다."}}}},__namedExportsOrder=["SingleCard","ThreeCards","FiveCards","ManyCards","LoadingState"];SingleCard.parameters={...SingleCard.parameters,docs:{...SingleCard.parameters?.docs,source:{originalSource:"{\n  args: {\n    count: 1\n  }\n}",...SingleCard.parameters?.docs?.source}}},ThreeCards.parameters={...ThreeCards.parameters,docs:{...ThreeCards.parameters?.docs,source:{originalSource:"{\n  args: {\n    count: 3\n  }\n}",...ThreeCards.parameters?.docs?.source}}},FiveCards.parameters={...FiveCards.parameters,docs:{...FiveCards.parameters?.docs,source:{originalSource:"{\n  args: {\n    count: 5\n  }\n}",...FiveCards.parameters?.docs?.source}}},ManyCards.parameters={...ManyCards.parameters,docs:{...ManyCards.parameters?.docs,source:{originalSource:"{\n  args: {\n    count: 8\n  }\n}",...ManyCards.parameters?.docs?.source}}},LoadingState.parameters={...LoadingState.parameters,docs:{...LoadingState.parameters?.docs,source:{originalSource:'{\n  args: {\n    count: 4\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "일정을 불러오는 동안 표시되는 로딩 상태입니다."\n      }\n    }\n  }\n}',...LoadingState.parameters?.docs?.source}}}},"./src/utils/imagePath.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Dw:()=>getImagePath,vK:()=>COMMON_IMAGES});const basePath="/SWYP_FRONT";function getImagePath(imagePath){return imagePath.startsWith("http://")||imagePath.startsWith("https://")?imagePath:imagePath.startsWith("/")&&basePath?`${basePath}${imagePath}`:imagePath}const COMMON_IMAGES=Object.fromEntries(Object.entries({DEFAULT_IMG:"/default_img.png",KAKAO_ICON:"/icons/kakao.png",KAKAO_ROUND:"/icons/kakao_round.png",REFRESH:"/icons/Refresh.svg",STAR:"/icons/Star.svg",LOCATION:"/icons/Location.svg",CLOCK:"/icons/Clock.svg",CHEVRON_LEFT:"/icons/Chevron Left Bold.svg",CHEVRON_DOWN:"/icons/Chevron Down.svg",CHEVRON_RIGHT:"/icons/Chevron Right.svg",DOT_LINE:"/icons/DotLine.svg",DOT:"/icons/Dot.svg",WALK:"/icons/Walk.svg",CAR:"/icons/Car.svg",AI:"/icons/AI.svg",ARROW_RIGHT_WHITE:"/icons/Arrow Right White.svg",CLOSE:"/icons/Close.svg",ALONE:"/icons/Alone.png",COUPLE:"/icons/Couple.png",FAMILY:"/icons/Family.png",FRIEND:"/icons/Friend.png",AVATAR:"/icons/Avatar.svg",MAIN_LOGO:"/icons/MainLogo.webp",LINK:"/icons/Link.svg",HANDLE_DESKTOP:"/icons/Handle Desktop.svg",RE_REQUEST:"/icons/Re_Request.svg",RESET:"/icons/Reset.svg",PDF_DOWNLOAD:"/icons/Pdf Download.svg",STAR_FILLED:"/icons/Star_Filled.svg",STAR_NORMAL:"/icons/Star_Normal.svg",CHECK_UNCHECKED:"/icons/Check_Unchecked.svg",CHECK_CHECKED:"/icons/Check_Checked.svg",SUCCESS:"/icons/Success.svg",FAIL:"/icons/Fail.svg",ARROW:"/icons/Arrow.svg",URL:"/icons/URL.svg",SHARE:"/icons/Share.svg",INFO:"/icons/Inform.svg"}).map((([key,path])=>[key,getImagePath(path)])))}}]);