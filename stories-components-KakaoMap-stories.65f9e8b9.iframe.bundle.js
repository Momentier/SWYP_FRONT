"use strict";(self.webpackChunkmy_app=self.webpackChunkmy_app||[]).push([[8507],{"./src/components/Text.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Text});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js");const TEXT_STYLES={display1:"text-[56px] leading-[72px] tracking-[-0.0316em]",display2:"text-[40px] leading-[52px] tracking-[-0.0282em]",title1:"text-[36px] leading-[48px] tracking-[-0.0272em]",title2:"text-[28px] leading-[38px] tracking-[-0.0236em]",title3:"text-[24px] leading-[32px] tracking-[-0.0232em]",heading1:"text-[22px] leading-[30px] tracking-[-0.0176em]",heading2:"text-[20px] leading-[28px] tracking-[-0.012em]",headline1:"text-[18px] leading-[26px] tracking-[-0.002em]",headline2:"text-[17px] leading-[24px] tracking-[0em]",body1:"text-[16px] leading-[24px] tracking-[0.0057em]",body1Reading:"text-[16px] leading-[28px] tracking-[0.0057em]",body2:"text-[15px] leading-[22px] tracking-[0.0069em]",body2Reading:"text-[15px] leading-[26px] tracking-[0.0069em]",label1:"text-[14px] leading-[20px] tracking-[0.0145em]",label1Reading:"text-[14px] leading-[22px] tracking-[0.0145em]",label2:"text-[12px] leading-[18px] tracking-[0.0156em]",caption1:"text-[12px] leading-[16px] tracking-[0.0137em]",caption2:"text-[10px] leading-[14px] tracking-[0.0137em]"};function Text({as,textStyle="body1",className="",children,...props}){const Component=as||"span";var _TEXT_STYLES_textStyle;const styleClass=null!==(_TEXT_STYLES_textStyle=TEXT_STYLES[textStyle])&&void 0!==_TEXT_STYLES_textStyle?_TEXT_STYLES_textStyle:"";return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Component,{className:`${styleClass} ${className}`,...props,children})}Text.__docgenInfo={description:"",methods:[],displayName:"Text",props:{as:{required:!1,tsType:{name:"T"},description:""},textStyle:{required:!1,tsType:{name:"union",raw:"keyof typeof TEXT_STYLES",elements:[{name:"literal",value:"display1"},{name:"literal",value:"display2"},{name:"literal",value:"title1"},{name:"literal",value:"title2"},{name:"literal",value:"title3"},{name:"literal",value:"heading1"},{name:"literal",value:"heading2"},{name:"literal",value:"headline1"},{name:"literal",value:"headline2"},{name:"literal",value:"body1"},{name:"literal",value:"body1Reading"},{name:"literal",value:"body2"},{name:"literal",value:"body2Reading"},{name:"literal",value:"label1"},{name:"literal",value:"label1Reading"},{name:"literal",value:"label2"},{name:"literal",value:"caption1"},{name:"literal",value:"caption2"}]},description:"",defaultValue:{value:'"body1"',computed:!1}},className:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},children:{required:!0,tsType:{name:"ReactNode"},description:""}}}},"./src/lib/api/axiosInstance.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>api_axiosInstance});var react=__webpack_require__("./node_modules/zustand/esm/react.mjs"),middleware=__webpack_require__("./node_modules/zustand/esm/middleware.mjs"),console=__webpack_require__("./node_modules/console-browserify/index.js");const useAuthStore=(0,react.v)()((0,middleware.Zr)(((set,get)=>({isLoggedIn:!1,user:null,hasHydrated:!1,setHasHydrated:value=>set({hasHydrated:value}),login:user=>{set({isLoggedIn:!0,user})},refresh:token=>{const currentUser=get().user;if(currentUser){const updatedUser={...currentUser,accessToken:token.accessToken,expiresIn:token.expiresIn};set({isLoggedIn:!0,user:updatedUser})}else console.warn("User not found. Cannot refresh token.")},logout:()=>{set({isLoggedIn:!1,user:null})}})),{name:"auth-storage",onRehydrateStorage:()=>state=>{state&&state.setHasHydrated(!0)},skipHydration:!1}));var auth_console=__webpack_require__("./node_modules/console-browserify/index.js");const useLoadingStore=(0,react.v)((set=>({isLoading:!1,loadingType:"none",setLoading:(isLoading,type="fullscreen")=>set({isLoading,loadingType:isLoading?type:"none"})})));var axios=__webpack_require__("./node_modules/axios/lib/axios.js"),process=__webpack_require__("./node_modules/process/browser.js"),axiosInstance_console=__webpack_require__("./node_modules/console-browserify/index.js");const backendUrl=process.env.NEXT_PUBLIC_API_BASE_URL,axiosInstance_axiosInstance=axios.A.create({baseURL:backendUrl,headers:{"Content-Type":"application/json"},withCredentials:!0});axiosInstance_axiosInstance.interceptors.request.use((config=>{const{user}=useAuthStore.getState();var _config_loadingType;(null==user?void 0:user.accessToken)&&(config.headers.Authorization=`Bearer ${user.accessToken}`);const type=null!==(_config_loadingType=config.loadingType)&&void 0!==_config_loadingType?_config_loadingType:"fullscreen";return useLoadingStore.getState().setLoading(!0,type),config}),(error=>(useLoadingStore.getState().setLoading(!1),Promise.reject(error)))),axiosInstance_axiosInstance.interceptors.response.use((response=>(useLoadingStore.getState().setLoading(!1),response)),(async error=>{useLoadingStore.getState().setLoading(!1);const originalRequest=error.config;if(originalRequest.url.includes("/auth/token/reissue"))return axiosInstance_console.warn("🛑 토큰 재발급 요청은 인터셉터에서 무시합니다."),Promise.reject(error);if(!useAuthStore.getState().isLoggedIn)return axiosInstance_console.warn("🔒 로그아웃 상태입니다. 요청 중단"),Promise.reject(error);if(401===error.response.status&&!originalRequest._retry){originalRequest._retry=!0,axiosInstance_console.warn("🔄 401 발생, 토큰 재발급 시도 중...");const newAccessToken=await(async()=>{try{const response=await api_axiosInstance.post("/auth/token/reissue");if(200===response.status){const{accessToken,userName,expiresIn,hasSubmittedExperience}=response.data;return useAuthStore.getState().refresh({accessToken,expiresIn}),auth_console.log("🔄 토큰 재발급 성공"),response.data}return auth_console.error("❌ 토큰 재발급 실패"),useAuthStore.getState().logout(),null}catch(error){return auth_console.error("토큰 재발급 중 오류 발생:",error),useAuthStore.getState().logout(),null}})();if(newAccessToken)return axiosInstance_console.log("✅ 토큰 재발급 성공, 요청 재시도"),originalRequest.headers.Authorization=`Bearer ${newAccessToken}`,axiosInstance_axiosInstance(originalRequest);axiosInstance_console.error("❌ 토큰 재발급 실패, 로그아웃 처리"),useAuthStore.getState().logout(),window.location.href="/main"}return Promise.reject(error)}));const api_axiosInstance=axiosInstance_axiosInstance},"./src/store/useRecommendTravelStore.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{PZ:()=>usePublicTravelDetailStore,w1:()=>useRecommendTravelDetailStore});var axiosInstance=__webpack_require__("./src/lib/api/axiosInstance.ts");var react=__webpack_require__("./node_modules/zustand/esm/react.mjs"),middleware=__webpack_require__("./node_modules/zustand/esm/middleware.mjs"),console=__webpack_require__("./node_modules/console-browserify/index.js");(0,react.v)()((0,middleware.Zr)((set=>({inputs:null,setInputs:inputs=>set({inputs}),clearInputs:()=>set({inputs:null})})),{name:"user-input"})),(0,react.v)()((0,middleware.Zr)((set=>({items:[],setItems:items=>set({items}),clearItems:()=>set({items:[]})})),{name:"recommend-list"}));const calculateScheduleTimes=async places=>places?await Promise.all(places.map((async(currentPlace,index)=>{const nextPlace=places[index+1];if(!nextPlace)return currentPlace;const updatedPlace={...currentPlace,travelWalkTime:"정보 없음",travelCarTime:"정보 없음",travelDistance:"정보 없음"};if(currentPlace.latitude&&currentPlace.longitude&&nextPlace.latitude&&nextPlace.longitude)try{const{walkingDuration,drivingDuration,distance}=await(async data=>{try{return(await axiosInstance.A.get("/route/time",{params:{startLatitude:data.startLatitude,startLongitude:data.startLongitude,endLatitude:data.endLatitude,endLongitude:data.endLongitude},loadingType:"none"})).data}catch(error){var _error_response;throw new Error((null===(_error_response=error.response)||void 0===_error_response?void 0:_error_response.data.message)||"소요 시간 정보를 불러오지 못했습니다.")}})({startLatitude:currentPlace.latitude,startLongitude:currentPlace.longitude,endLatitude:nextPlace.latitude,endLongitude:nextPlace.longitude});walkingDuration&&(updatedPlace.travelWalkTime=`${walkingDuration}분`),drivingDuration&&(updatedPlace.travelCarTime=`${drivingDuration}분`),updatedPlace.travelDistance=""+(distance?distance+"m":"거리 정보 추후 업데이트")}catch(error){console.error("경로 계산 실패:",error)}return updatedPlace}))):[],updateDailySchedules=async schedules=>await Promise.all(schedules.map((async schedule=>{const updatedAttractions=await calculateScheduleTimes(schedule.attractions);return{...schedule,attractions:updatedAttractions}}))),useRecommendTravelDetailStore=(0,react.v)()((0,middleware.Zr)(((set,get)=>({itinerary:null,setItinerary:async itinerary=>{if(null==itinerary?void 0:itinerary.dailyScheduleDtos){const schedulesWithUUID=assignUUIDToSchedules(itinerary.dailyScheduleDtos),updatedSchedules=await updateDailySchedules(schedulesWithUUID);set({itinerary:{...itinerary,dailyScheduleDtos:updatedSchedules}})}else set({itinerary})},updateItinerary:async updatedItinerary=>{const itinerary=get().itinerary;if(itinerary){const updatedSchedules=await updateDailySchedules(updatedItinerary);set({itinerary:{...itinerary,dailyScheduleDtos:updatedSchedules}})}},updateAttraction:async(oldAttraction,newAttraction)=>{const itinerary=get().itinerary;if(itinerary){const updatedSchedules=await Promise.all(itinerary.dailyScheduleDtos.map((async schedule=>{if(!schedule.attractions.some((attraction=>attraction.id===oldAttraction.id)))return schedule;const updatedAttractions=await calculateScheduleTimes(schedule.attractions.map((attraction=>attraction.id===oldAttraction.id?{...newAttraction,id:oldAttraction.id,previousData:JSON.parse(JSON.stringify(attraction))}:attraction)));return{...schedule,attractions:updatedAttractions}})));set({itinerary:{...itinerary,dailyScheduleDtos:updatedSchedules}})}},clearItinerary:()=>set({itinerary:null})})),{name:"recommend-detail"})),usePublicTravelDetailStore=(0,react.v)()((0,middleware.Zr)((set=>({itinerary:null,setItinerary:async value=>{if(null==value?void 0:value.dailyScheduleDtos){const schedulesWithUUID=assignUUIDToSchedules(value.dailyScheduleDtos),updatedSchedules=await updateDailySchedules(schedulesWithUUID);set({itinerary:{...value,dailyScheduleDtos:updatedSchedules}})}else set({itinerary:value})},clearItinerary:()=>set({itinerary:null})})),{name:"public-travel-detail"})),assignUUIDToAttraction=attraction=>({...attraction,id:attraction.id&&"number"==typeof attraction.id?attraction.id:Date.now()+Math.floor(1e4*Math.random()),previousData:attraction.previousData?assignUUIDToAttraction(attraction.previousData):void 0}),assignUUIDToSchedules=schedules=>schedules.map((schedule=>{return{...schedule,attractions:(attractions=schedule.attractions,attractions.map(assignUUIDToAttraction))};var attractions}))},"./src/stories/components/KakaoMap.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,ErrorState:()=>ErrorState,FullScreen:()=>FullScreen,LargeSize:()=>LargeSize,LoadingState:()=>LoadingState,NoAPIKey:()=>NoAPIKey,SmallSize:()=>SmallSize,WithTravelRoute:()=>WithTravelRoute,__namedExportsOrder:()=>__namedExportsOrder,default:()=>KakaoMap_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),useRecommendTravelStore=__webpack_require__("./src/store/useRecommendTravelStore.ts"),navigation=__webpack_require__("./node_modules/@storybook/nextjs/dist/export-mocks/navigation/index.mjs"),Text=__webpack_require__("./src/components/Text.tsx"),process=__webpack_require__("./node_modules/process/browser.js");const KakaoMap=()=>{const[isLoaded,setIsLoaded]=(0,react.useState)(!1),[error,setError]=(0,react.useState)(null),KAKAO_API_KEY=process.env.NEXT_PUBLIC_KAKAO_MAP_API_KEY,pathname=(0,navigation.usePathname)(),isDetailPage="/travel/detail"===pathname,itinerary=(null==pathname||pathname.startsWith("/travel/detail/"),isDetailPage?(0,useRecommendTravelStore.w1)((state=>state.itinerary)):(0,useRecommendTravelStore.PZ)((state=>state.itinerary))),colorCycle=["#9A77FF","#7779FF","#77ABFF","#C477FF","#E477FF","#4B0082","#8B00FF"];return(0,react.useEffect)((()=>{if(!KAKAO_API_KEY)return void setError("카카오맵 API 키가 설정되지 않았습니다.");const script=document.createElement("script");return script.src=`https://dapi.kakao.com/v2/maps/sdk.js?appkey=${KAKAO_API_KEY}&autoload=false&libraries=services,clusterer,drawing`,script.async=!0,document.head.appendChild(script),script.onload=()=>{window.kakao&&window.kakao.maps?window.kakao.maps.load((()=>{setIsLoaded(!0)})):setError("카카오맵 라이브러리를 불러올 수 없습니다.")},script.onerror=()=>{setError("카카오맵 스크립트를 불러오는데 실패했습니다.")},()=>{const existingScript=document.querySelector('script[src*="dapi.kakao.com"]');existingScript&&document.head.removeChild(existingScript)}}),[KAKAO_API_KEY]),(0,react.useEffect)((()=>{var _itinerary_dailyScheduleDtos;if(!isLoaded||error)return;const kakao=window.kakao,container=document.getElementById("map");if(!container)return;let initialLat=37.5665,initialLng=126.978;if(null==itinerary||null===(_itinerary_dailyScheduleDtos=itinerary.dailyScheduleDtos)||void 0===_itinerary_dailyScheduleDtos?void 0:_itinerary_dailyScheduleDtos.length)for(const day of itinerary.dailyScheduleDtos)if(day.attractions.length>0){const firstAttraction=day.attractions[0];firstAttraction.latitude&&firstAttraction.longitude&&(initialLat=firstAttraction.latitude,initialLng=firstAttraction.longitude);break}const options={center:new kakao.maps.LatLng(initialLat,initialLng),level:3},map=new kakao.maps.Map(container,options),linePath=[];let markerIndex=1;if(null==itinerary?void 0:itinerary.dailyScheduleDtos){itinerary.dailyScheduleDtos.forEach(((day,dayIndex)=>{day.attractions.forEach((attraction=>{if(attraction.latitude&&attraction.longitude){const markerPosition=new kakao.maps.LatLng(attraction.latitude,attraction.longitude);linePath.push(markerPosition);const overlayContent=`\n                            <div style="\n                                width: 30px;\n                                height: 30px;\n                                background-color: ${colorCycle[dayIndex%colorCycle.length]};\n                                border-radius: 50%;\n                                display: flex;\n                                justify-content: center;\n                                align-items: center;\n                                color: white;\n                                font-weight: bold;\n                                border: 2px solid white;\n                                box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.3);\n                            ">\n                                ${markerIndex}\n                            </div>`,overlay=new kakao.maps.CustomOverlay({content:overlayContent,position:markerPosition,yAnchor:1.1});overlay.setMap(map),markerIndex++,kakao.maps.event.addListener(overlay,"click",(()=>{alert(`${attraction.name} - ${attraction.address}`)}))}}))}));new kakao.maps.Polyline({path:linePath,strokeWeight:3,strokeColor:"#db4040",strokeOpacity:.8,strokeStyle:"solid"}).setMap(map)}}),[isLoaded,itinerary,error]),error?(0,jsx_runtime.jsx)("div",{className:"w-full h-full flex items-center justify-center bg-gray-100 rounded-lg",children:(0,jsx_runtime.jsxs)("div",{className:"text-center p-8",children:[(0,jsx_runtime.jsx)("div",{className:"w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center mx-auto mb-4",children:(0,jsx_runtime.jsx)(Text.A,{textStyle:"title2",children:"🗺️"})}),(0,jsx_runtime.jsx)(Text.A,{textStyle:"heading2",className:"font-semibold mb-2 text-gray-700",children:"지도를 불러올 수 없습니다"}),(0,jsx_runtime.jsx)(Text.A,{textStyle:"body2",className:"text-gray-500 mb-4",children:error}),(0,jsx_runtime.jsx)(Text.A,{textStyle:"caption1",className:"text-gray-400",children:"관리자에게 문의해주세요."})]})}):isLoaded?(0,jsx_runtime.jsx)("div",{id:"map",style:{width:"100%",height:"100%"}}):(0,jsx_runtime.jsx)("div",{className:"w-full h-full flex items-center justify-center bg-gray-50 rounded-lg",children:(0,jsx_runtime.jsxs)("div",{className:"text-center",children:[(0,jsx_runtime.jsx)("div",{className:"animate-spin rounded-full h-8 w-8 border-b-2 border-purple-600 mx-auto mb-4"}),(0,jsx_runtime.jsx)(Text.A,{textStyle:"body2",className:"text-gray-500",children:"지도를 불러오는 중..."})]})})},components_KakaoMap=KakaoMap;KakaoMap.__docgenInfo={description:"",methods:[],displayName:"KakaoMap"};const KakaoMapNoAPI=()=>(0,jsx_runtime.jsx)("div",{className:"w-full h-full flex items-center justify-center bg-gray-100 rounded-lg",children:(0,jsx_runtime.jsxs)("div",{className:"text-center p-8",children:[(0,jsx_runtime.jsx)("div",{className:"w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center mx-auto mb-4",children:(0,jsx_runtime.jsx)(Text.A,{textStyle:"title2",children:"🗺️"})}),(0,jsx_runtime.jsx)(Text.A,{textStyle:"heading2",className:"font-semibold mb-2 text-gray-700",children:"지도를 불러올 수 없습니다"}),(0,jsx_runtime.jsx)(Text.A,{textStyle:"body2",className:"text-gray-500 mb-4",children:"카카오맵 API 키가 설정되지 않았습니다."}),(0,jsx_runtime.jsx)(Text.A,{textStyle:"caption1",className:"text-gray-400",children:"관리자에게 문의해주세요."})]})}),KakaoMapLoading=()=>(0,jsx_runtime.jsx)("div",{className:"w-full h-full flex items-center justify-center bg-gray-50 rounded-lg",children:(0,jsx_runtime.jsxs)("div",{className:"text-center",children:[(0,jsx_runtime.jsx)("div",{className:"animate-spin rounded-full h-8 w-8 border-b-2 border-purple-600 mx-auto mb-4"}),(0,jsx_runtime.jsx)(Text.A,{textStyle:"body2",className:"text-gray-500",children:"지도를 불러오는 중..."})]})}),KakaoMapPlaceholder=()=>(0,jsx_runtime.jsx)("div",{className:"w-full h-full bg-gradient-to-br from-green-100 to-blue-100 rounded-lg flex items-center justify-center",children:(0,jsx_runtime.jsxs)("div",{className:"text-center",children:[(0,jsx_runtime.jsx)(Text.A,{textStyle:"title2",className:"mb-4",children:"🗺️ 카카오맵"}),(0,jsx_runtime.jsx)(Text.A,{textStyle:"body1",className:"text-gray-600 mb-2",children:"실제 환경에서는 여기에 지도가 표시됩니다"}),(0,jsx_runtime.jsx)(Text.A,{textStyle:"caption1",className:"text-gray-500",children:"여행 경로와 마커들이 표시됩니다"})]})}),KakaoMap_stories={title:"Components/KakaoMap",component:components_KakaoMap,tags:["autodocs"],parameters:{docs:{description:{component:"카카오맵 컴포넌트입니다. API 키가 필요하며, 여행 일정 데이터가 있을 때 마커와 경로를 표시합니다."}}}},Default={render:()=>(0,jsx_runtime.jsx)("div",{style:{width:"100%",height:"500px"},children:(0,jsx_runtime.jsx)(KakaoMapPlaceholder,{})}),parameters:{docs:{description:{story:"기본 카카오맵 컴포넌트입니다. 실제 API 키가 있을 때의 모습을 시뮬레이션합니다."}}}},NoAPIKey={render:()=>(0,jsx_runtime.jsx)("div",{style:{width:"100%",height:"500px"},children:(0,jsx_runtime.jsx)(KakaoMapNoAPI,{})}),parameters:{docs:{description:{story:"API 키가 설정되지 않았을 때의 에러 상태입니다."}}}},LoadingState={render:()=>(0,jsx_runtime.jsx)("div",{style:{width:"100%",height:"500px"},children:(0,jsx_runtime.jsx)(KakaoMapLoading,{})}),parameters:{docs:{description:{story:"지도 라이브러리를 로딩 중인 상태입니다."}}}},SmallSize={render:()=>(0,jsx_runtime.jsx)("div",{style:{width:"400px",height:"300px"},children:(0,jsx_runtime.jsx)(KakaoMapPlaceholder,{})}),parameters:{docs:{description:{story:"작은 크기의 지도입니다."}}}},LargeSize={render:()=>(0,jsx_runtime.jsx)("div",{style:{width:"100%",height:"800px"},children:(0,jsx_runtime.jsx)(KakaoMapPlaceholder,{})}),parameters:{docs:{description:{story:"큰 크기의 지도입니다."}}}},FullScreen={render:()=>(0,jsx_runtime.jsx)("div",{style:{width:"100vw",height:"100vh"},children:(0,jsx_runtime.jsx)(KakaoMapPlaceholder,{})}),parameters:{layout:"fullscreen",docs:{description:{story:"전체 화면 크기의 지도입니다."}}}},WithTravelRoute={render:()=>(0,jsx_runtime.jsx)("div",{style:{width:"100%",height:"500px"},children:(0,jsx_runtime.jsxs)("div",{className:"w-full h-full bg-gradient-to-br from-purple-100 to-blue-100 rounded-lg flex items-center justify-center relative",children:[(0,jsx_runtime.jsxs)("div",{className:"text-center",children:[(0,jsx_runtime.jsx)(Text.A,{textStyle:"title2",className:"mb-4",children:"🗺️ 여행 경로 지도"}),(0,jsx_runtime.jsx)(Text.A,{textStyle:"body1",className:"text-gray-600 mb-2",children:"3일간의 서울 여행 경로"})]}),(0,jsx_runtime.jsx)("div",{className:"absolute top-1/4 left-1/4 w-6 h-6 bg-purple-500 rounded-full flex items-center justify-center text-white text-sm font-bold",children:"1"}),(0,jsx_runtime.jsx)("div",{className:"absolute top-1/3 left-1/2 w-6 h-6 bg-purple-500 rounded-full flex items-center justify-center text-white text-sm font-bold",children:"2"}),(0,jsx_runtime.jsx)("div",{className:"absolute bottom-1/3 right-1/3 w-6 h-6 bg-purple-500 rounded-full flex items-center justify-center text-white text-sm font-bold",children:"3"}),(0,jsx_runtime.jsx)("svg",{className:"absolute inset-0 w-full h-full",children:(0,jsx_runtime.jsx)("path",{d:"M 25% 25% Q 50% 33% 67% 67%",stroke:"#db4040",strokeWidth:"3",fill:"none",strokeDasharray:"5,5"})})]})}),parameters:{docs:{description:{story:"여행 경로와 마커가 표시된 지도의 예시입니다."}}}},ErrorState={render:()=>(0,jsx_runtime.jsx)("div",{style:{width:"100%",height:"500px"},children:(0,jsx_runtime.jsx)("div",{className:"w-full h-full flex items-center justify-center bg-red-50 rounded-lg border-2 border-red-200",children:(0,jsx_runtime.jsxs)("div",{className:"text-center p-8",children:[(0,jsx_runtime.jsx)("div",{className:"w-16 h-16 bg-red-200 rounded-full flex items-center justify-center mx-auto mb-4",children:(0,jsx_runtime.jsx)(Text.A,{textStyle:"title2",children:"❌"})}),(0,jsx_runtime.jsx)(Text.A,{textStyle:"heading2",className:"font-semibold mb-2 text-red-700",children:"지도 로드 실패"}),(0,jsx_runtime.jsx)(Text.A,{textStyle:"body2",className:"text-red-600 mb-4",children:"카카오맵 스크립트를 불러오는데 실패했습니다."}),(0,jsx_runtime.jsx)(Text.A,{textStyle:"caption1",className:"text-red-500",children:"네트워크 연결을 확인해주세요."})]})})}),parameters:{docs:{description:{story:"스크립트 로딩 실패 등의 에러 상태입니다."}}}},__namedExportsOrder=["Default","NoAPIKey","LoadingState","SmallSize","LargeSize","FullScreen","WithTravelRoute","ErrorState"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "100%",\n    height: "500px"\n  }}>\n      <KakaoMapPlaceholder />\n    </div>,\n  parameters: {\n    docs: {\n      description: {\n        story: "기본 카카오맵 컴포넌트입니다. 실제 API 키가 있을 때의 모습을 시뮬레이션합니다."\n      }\n    }\n  }\n}',...Default.parameters?.docs?.source}}},NoAPIKey.parameters={...NoAPIKey.parameters,docs:{...NoAPIKey.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "100%",\n    height: "500px"\n  }}>\n      <KakaoMapNoAPI />\n    </div>,\n  parameters: {\n    docs: {\n      description: {\n        story: "API 키가 설정되지 않았을 때의 에러 상태입니다."\n      }\n    }\n  }\n}',...NoAPIKey.parameters?.docs?.source}}},LoadingState.parameters={...LoadingState.parameters,docs:{...LoadingState.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "100%",\n    height: "500px"\n  }}>\n      <KakaoMapLoading />\n    </div>,\n  parameters: {\n    docs: {\n      description: {\n        story: "지도 라이브러리를 로딩 중인 상태입니다."\n      }\n    }\n  }\n}',...LoadingState.parameters?.docs?.source}}},SmallSize.parameters={...SmallSize.parameters,docs:{...SmallSize.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "400px",\n    height: "300px"\n  }}>\n      <KakaoMapPlaceholder />\n    </div>,\n  parameters: {\n    docs: {\n      description: {\n        story: "작은 크기의 지도입니다."\n      }\n    }\n  }\n}',...SmallSize.parameters?.docs?.source}}},LargeSize.parameters={...LargeSize.parameters,docs:{...LargeSize.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "100%",\n    height: "800px"\n  }}>\n      <KakaoMapPlaceholder />\n    </div>,\n  parameters: {\n    docs: {\n      description: {\n        story: "큰 크기의 지도입니다."\n      }\n    }\n  }\n}',...LargeSize.parameters?.docs?.source}}},FullScreen.parameters={...FullScreen.parameters,docs:{...FullScreen.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "100vw",\n    height: "100vh"\n  }}>\n      <KakaoMapPlaceholder />\n    </div>,\n  parameters: {\n    layout: "fullscreen",\n    docs: {\n      description: {\n        story: "전체 화면 크기의 지도입니다."\n      }\n    }\n  }\n}',...FullScreen.parameters?.docs?.source}}},WithTravelRoute.parameters={...WithTravelRoute.parameters,docs:{...WithTravelRoute.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "100%",\n    height: "500px"\n  }}>\n      <div className="w-full h-full bg-gradient-to-br from-purple-100 to-blue-100 rounded-lg flex items-center justify-center relative">\n        <div className="text-center">\n          <Text textStyle="title2" className="mb-4">🗺️ 여행 경로 지도</Text>\n          <Text textStyle="body1" className="text-gray-600 mb-2">\n            3일간의 서울 여행 경로\n          </Text>\n        </div>\n        \n        {/* 가상 마커들 */}\n        <div className="absolute top-1/4 left-1/4 w-6 h-6 bg-purple-500 rounded-full flex items-center justify-center text-white text-sm font-bold">\n          1\n        </div>\n        <div className="absolute top-1/3 left-1/2 w-6 h-6 bg-purple-500 rounded-full flex items-center justify-center text-white text-sm font-bold">\n          2\n        </div>\n        <div className="absolute bottom-1/3 right-1/3 w-6 h-6 bg-purple-500 rounded-full flex items-center justify-center text-white text-sm font-bold">\n          3\n        </div>\n        \n        {/* 가상 경로 선 */}\n        <svg className="absolute inset-0 w-full h-full">\n          <path d="M 25% 25% Q 50% 33% 67% 67%" stroke="#db4040" strokeWidth="3" fill="none" strokeDasharray="5,5" />\n        </svg>\n      </div>\n    </div>,\n  parameters: {\n    docs: {\n      description: {\n        story: "여행 경로와 마커가 표시된 지도의 예시입니다."\n      }\n    }\n  }\n}',...WithTravelRoute.parameters?.docs?.source}}},ErrorState.parameters={...ErrorState.parameters,docs:{...ErrorState.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    width: "100%",\n    height: "500px"\n  }}>\n      <div className="w-full h-full flex items-center justify-center bg-red-50 rounded-lg border-2 border-red-200">\n        <div className="text-center p-8">\n          <div className="w-16 h-16 bg-red-200 rounded-full flex items-center justify-center mx-auto mb-4">\n            <Text textStyle="title2">❌</Text>\n          </div>\n          <Text textStyle="heading2" className="font-semibold mb-2 text-red-700">\n            지도 로드 실패\n          </Text>\n          <Text textStyle="body2" className="text-red-600 mb-4">\n            카카오맵 스크립트를 불러오는데 실패했습니다.\n          </Text>\n          <Text textStyle="caption1" className="text-red-500">\n            네트워크 연결을 확인해주세요.\n          </Text>\n        </div>\n      </div>\n    </div>,\n  parameters: {\n    docs: {\n      description: {\n        story: "스크립트 로딩 실패 등의 에러 상태입니다."\n      }\n    }\n  }\n}',...ErrorState.parameters?.docs?.source}}}}}]);