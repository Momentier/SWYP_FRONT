"use strict";(self.webpackChunkmy_app=self.webpackChunkmy_app||[]).push([[4626],{"./src/components/Text.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>Text});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js");const TEXT_STYLES={display1:"text-[56px] leading-[72px] tracking-[-0.0316em]",display2:"text-[40px] leading-[52px] tracking-[-0.0282em]",title1:"text-[36px] leading-[48px] tracking-[-0.0272em]",title2:"text-[28px] leading-[38px] tracking-[-0.0236em]",title3:"text-[24px] leading-[32px] tracking-[-0.0232em]",heading1:"text-[22px] leading-[30px] tracking-[-0.0176em]",heading2:"text-[20px] leading-[28px] tracking-[-0.012em]",headline1:"text-[18px] leading-[26px] tracking-[-0.002em]",headline2:"text-[17px] leading-[24px] tracking-[0em]",body1:"text-[16px] leading-[24px] tracking-[0.0057em]",body1Reading:"text-[16px] leading-[28px] tracking-[0.0057em]",body2:"text-[15px] leading-[22px] tracking-[0.0069em]",body2Reading:"text-[15px] leading-[26px] tracking-[0.0069em]",label1:"text-[14px] leading-[20px] tracking-[0.0145em]",label1Reading:"text-[14px] leading-[22px] tracking-[0.0145em]",label2:"text-[12px] leading-[18px] tracking-[0.0156em]",caption1:"text-[12px] leading-[16px] tracking-[0.0137em]",caption2:"text-[10px] leading-[14px] tracking-[0.0137em]"};function Text({as,textStyle="body1",className="",children,...props}){const Component=as||"span";var _TEXT_STYLES_textStyle;const styleClass=null!==(_TEXT_STYLES_textStyle=TEXT_STYLES[textStyle])&&void 0!==_TEXT_STYLES_textStyle?_TEXT_STYLES_textStyle:"";return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Component,{className:`${styleClass} ${className}`,...props,children})}Text.__docgenInfo={description:"",methods:[],displayName:"Text",props:{as:{required:!1,tsType:{name:"T"},description:""},textStyle:{required:!1,tsType:{name:"union",raw:"keyof typeof TEXT_STYLES",elements:[{name:"literal",value:"display1"},{name:"literal",value:"display2"},{name:"literal",value:"title1"},{name:"literal",value:"title2"},{name:"literal",value:"title3"},{name:"literal",value:"heading1"},{name:"literal",value:"heading2"},{name:"literal",value:"headline1"},{name:"literal",value:"headline2"},{name:"literal",value:"body1"},{name:"literal",value:"body1Reading"},{name:"literal",value:"body2"},{name:"literal",value:"body2Reading"},{name:"literal",value:"label1"},{name:"literal",value:"label1Reading"},{name:"literal",value:"label2"},{name:"literal",value:"caption1"},{name:"literal",value:"caption2"}]},description:"",defaultValue:{value:'"body1"',computed:!1}},className:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},children:{required:!0,tsType:{name:"ReactNode"},description:""}}}},"./src/stories/components/ConfirmSaveItinerary.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,LongTitle:()=>LongTitle,PreChecked:()=>PreChecked,SaveConfirmation:()=>SaveConfirmation,ShortTitle:()=>ShortTitle,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ConfirmSaveItinerary_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),Text=__webpack_require__("./src/components/Text.tsx"),imagePath=__webpack_require__("./src/utils/imagePath.ts");function ConfirmSaveItinerary({initValue=!1,onChange,title}){const[checked,setChecked]=(0,react.useState)(initValue);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("div",{className:"p-5 bg-component-fill-alternative rounded-xl space-y-3",children:(0,jsx_runtime.jsx)(Text.A,{as:"p",textStyle:"body1",children:title})}),(0,jsx_runtime.jsxs)("div",{className:"mt-[38px]",children:[(0,jsx_runtime.jsxs)("label",{className:"flex items-center cursor-pointer mb-[4px]",children:[(0,jsx_runtime.jsx)("input",{type:"checkbox",className:"sr-only peer",checked,onChange:e=>{return value=e.target.checked,onChange(value),void setChecked(value);var value}}),(0,jsx_runtime.jsx)("span",{className:"w-6 h-6 bg-cover bg-center mr-1",style:{backgroundImage:`url(${checked?imagePath.vK.CHECK_CHECKED:imagePath.vK.CHECK_UNCHECKED})`}}),(0,jsx_runtime.jsx)(Text.A,{as:"span",textStyle:"label1Reading",children:"내 일정을 모두에게 공개할게요"})]}),(0,jsx_runtime.jsx)(Text.A,{as:"span",textStyle:"label1Reading",className:"text-semantic-label-alternative",children:"이름 등 개인정보는 공개되지 않으며, 체크 해제시 비공개로 저장됩니다."})]})]})}ConfirmSaveItinerary.__docgenInfo={description:"",methods:[],displayName:"ConfirmSaveItinerary",props:{initValue:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"value"}],return:{name:"void"}}},description:""},title:{required:!0,tsType:{name:"string"},description:""}}};const ConfirmSaveItinerary_stories={title:"Components/ConfirmSaveItinerary",component:ConfirmSaveItinerary,tags:["autodocs"],argTypes:{initValue:{control:"boolean",description:"초기 체크 상태"},onChange:{action:"changed",description:"체크 상태 변경 이벤트 핸들러"},title:{control:"text",description:"제목 텍스트"}}},ConfirmSaveItineraryWrapper=args=>{const[checked,setChecked]=(0,react.useState)(args.initValue||!1);return(0,jsx_runtime.jsx)(ConfirmSaveItinerary,{...args,initValue:checked,onChange:value=>{var _args_onChange;setChecked(value),null===(_args_onChange=args.onChange)||void 0===_args_onChange||_args_onChange.call(args,value)}})},Default={render:ConfirmSaveItineraryWrapper,args:{title:"이 일정을 저장하시겠습니까?",initValue:!1}},PreChecked={render:ConfirmSaveItineraryWrapper,args:{title:"이 일정을 저장하시겠습니까?",initValue:!0}},LongTitle={render:ConfirmSaveItineraryWrapper,args:{title:"여행 일정이 완성되었습니다! 이 멋진 여행 계획을 저장하고 다른 사용자들과 공유하시겠습니까? 저장된 일정은 마이페이지에서 언제든지 확인하실 수 있습니다.",initValue:!1}},ShortTitle={render:ConfirmSaveItineraryWrapper,args:{title:"저장",initValue:!1}},SaveConfirmation={render:ConfirmSaveItineraryWrapper,args:{title:"작성하신 여행 일정을 저장하고 공유하시겠습니까?",initValue:!0}},__namedExportsOrder=["Default","PreChecked","LongTitle","ShortTitle","SaveConfirmation"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: ConfirmSaveItineraryWrapper,\n  args: {\n    title: "이 일정을 저장하시겠습니까?",\n    initValue: false\n  }\n}',...Default.parameters?.docs?.source}}},PreChecked.parameters={...PreChecked.parameters,docs:{...PreChecked.parameters?.docs,source:{originalSource:'{\n  render: ConfirmSaveItineraryWrapper,\n  args: {\n    title: "이 일정을 저장하시겠습니까?",\n    initValue: true\n  }\n}',...PreChecked.parameters?.docs?.source}}},LongTitle.parameters={...LongTitle.parameters,docs:{...LongTitle.parameters?.docs,source:{originalSource:'{\n  render: ConfirmSaveItineraryWrapper,\n  args: {\n    title: "여행 일정이 완성되었습니다! 이 멋진 여행 계획을 저장하고 다른 사용자들과 공유하시겠습니까? 저장된 일정은 마이페이지에서 언제든지 확인하실 수 있습니다.",\n    initValue: false\n  }\n}',...LongTitle.parameters?.docs?.source}}},ShortTitle.parameters={...ShortTitle.parameters,docs:{...ShortTitle.parameters?.docs,source:{originalSource:'{\n  render: ConfirmSaveItineraryWrapper,\n  args: {\n    title: "저장",\n    initValue: false\n  }\n}',...ShortTitle.parameters?.docs?.source}}},SaveConfirmation.parameters={...SaveConfirmation.parameters,docs:{...SaveConfirmation.parameters?.docs,source:{originalSource:'{\n  render: ConfirmSaveItineraryWrapper,\n  args: {\n    title: "작성하신 여행 일정을 저장하고 공유하시겠습니까?",\n    initValue: true\n  }\n}',...SaveConfirmation.parameters?.docs?.source}}}},"./src/utils/imagePath.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Dw:()=>getImagePath,vK:()=>COMMON_IMAGES});const basePath="/SWYP_FRONT";function getImagePath(imagePath){return imagePath.startsWith("http://")||imagePath.startsWith("https://")?imagePath:imagePath.startsWith("/")&&basePath?`${basePath}${imagePath}`:imagePath}const COMMON_IMAGES=Object.fromEntries(Object.entries({DEFAULT_IMG:"/default_img.png",KAKAO_ICON:"/icons/kakao.png",KAKAO_ROUND:"/icons/kakao_round.png",REFRESH:"/icons/Refresh.svg",STAR:"/icons/Star.svg",LOCATION:"/icons/Location.svg",CLOCK:"/icons/Clock.svg",CHEVRON_LEFT:"/icons/Chevron Left Bold.svg",CHEVRON_DOWN:"/icons/Chevron Down.svg",CHEVRON_RIGHT:"/icons/Chevron Right.svg",DOT_LINE:"/icons/DotLine.svg",DOT:"/icons/Dot.svg",WALK:"/icons/Walk.svg",CAR:"/icons/Car.svg",AI:"/icons/AI.svg",ARROW_RIGHT_WHITE:"/icons/Arrow Right White.svg",CLOSE:"/icons/Close.svg",ALONE:"/icons/Alone.png",COUPLE:"/icons/Couple.png",FAMILY:"/icons/Family.png",FRIEND:"/icons/Friend.png",AVATAR:"/icons/Avatar.svg",MAIN_LOGO:"/icons/MainLogo.webp",LINK:"/icons/Link.svg",HANDLE_DESKTOP:"/icons/Handle Desktop.svg",RE_REQUEST:"/icons/Re_Request.svg",RESET:"/icons/Reset.svg",PDF_DOWNLOAD:"/icons/Pdf Download.svg",STAR_FILLED:"/icons/Star_Filled.svg",STAR_NORMAL:"/icons/Star_Normal.svg",CHECK_UNCHECKED:"/icons/Check_Unchecked.svg",CHECK_CHECKED:"/icons/Check_Checked.svg",SUCCESS:"/icons/Success.svg",FAIL:"/icons/Fail.svg",ARROW:"/icons/Arrow.svg",URL:"/icons/URL.svg",SHARE:"/icons/Share.svg",INFO:"/icons/Inform.svg"}).map((([key,path])=>[key,getImagePath(path)])))}}]);